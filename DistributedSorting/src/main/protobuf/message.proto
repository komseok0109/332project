syntax = "proto3";

package message;

service Message {
  rpc registerWorker (RegisterWorkerRequest) returns (RegisterWorkerReply) {}
  rpc calculatePivots (CalculatePivotRequest) returns (CalculatePivotReply) {}
  rpc partitionEndMsg (PhaseCompleteNotification) returns (EmptyAckMsg) {}
  rpc shufflingEndMsg (PhaseCompleteNotification) returns (EmptyAckMsg) {}
  rpc mergeEndMsg (PhaseCompleteNotification) returns (EmptyAckMsg) {}
}

service ShufflingMessage {
  rpc sendDataToWorker (SendDataRequest) returns (EmptyAckMsg) {}
  rpc shuffleAck (ShuffleAckRequest) returns (EmptyAckMsg) {}
}

message RegisterWorkerRequest {
  string workerIP = 1;
}

message RegisterWorkerReply {
  int32 totalWorkerCount = 2;
  int32 workerID = 1;
}

message CalculatePivotRequest {
  int32 workerID = 1;
  repeated string sampleData = 2;
}

message WorkerIDKeyRangeMapping {
  int32 workerID = 1;
  string startKey = 2;
  string endKey = 3;
}

message CalculatePivotReply {
  map<int32, string> workerIPs = 1;
  repeated WorkerIDKeyRangeMapping keyRangeMapping = 2;
}

message PhaseCompleteNotification {
  int32 workerID = 1;
}

message EmptyAckMsg {
}

message SendDataRequest {
  repeated string data = 2;
  int32 source = 1;
}

message ShuffleAckRequest {
  int32 source = 1;
}




